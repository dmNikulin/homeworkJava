package homework_06;

import java.util.Arrays;
import java.util.HashSet;
import java.util.Scanner;

// –ó–∞–¥–∞–Ω–∏–µ

// üìå –ü–æ–¥—É–º–∞—Ç—å –Ω–∞–¥ —Å—Ç—Ä—É–∫—Ç—É—Ä–æ–π –∫–ª–∞—Å—Å–∞ –ù–æ—É—Ç–±—É–∫ –¥–ª—è –º–∞–≥–∞–∑–∏–Ω–∞ —Ç–µ—Ö–Ω–∏–∫–∏ - –≤—ã–¥–µ–ª–∏—Ç—å –ø–æ–ª—è –∏
// –º–µ—Ç–æ–¥—ã. –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –≤ java.
// üìå –°–æ–∑–¥–∞—Ç—å –º–Ω–æ–∂–µ—Å—Ç–≤–æ –Ω–æ—É—Ç–±—É–∫–æ–≤.
// üìå –ù–∞–ø–∏—Å–∞—Ç—å –º–µ—Ç–æ–¥, –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç –∑–∞–ø—Ä–∞—à–∏–≤–∞—Ç—å —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∫—Ä–∏—Ç–µ—Ä–∏–π (–∏–ª–∏ –∫—Ä–∏—Ç–µ—Ä–∏–∏)
// —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –∏ –≤—ã–≤–µ–¥–µ—Ç –Ω–æ—É—Ç–±—É–∫–∏, –æ—Ç–≤–µ—á–∞—é—â–∏–µ —Ñ–∏–ª—å—Ç—Ä—É. –ö—Ä–∏—Ç–µ—Ä–∏–∏ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –º–æ–∂–Ω–æ
// —Ö—Ä–∞–Ω–∏—Ç—å –≤ Map. –ù–∞–ø—Ä–∏–º–µ—Ä:
// ‚Äú–í–≤–µ–¥–∏—Ç–µ —Ü–∏—Ñ—Ä—É, —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–º—É –∫—Ä–∏—Ç–µ—Ä–∏—é:
// 1 - –û–ó–£
// 2 - –û–±—ä–µ–º –ñ–î
// 3 - –û–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞
// 4 - –¶–≤–µ—Ç ‚Ä¶
// üìå –î–∞–ª–µ–µ –Ω—É–∂–Ω–æ –∑–∞–ø—Ä–æ—Å–∏—Ç—å –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –¥–ª—è —É–∫–∞–∑–∞–Ω–Ω—ã—Ö –∫—Ä–∏—Ç–µ—Ä–∏–µ–≤ - —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å
// –ø–∞—Ä–∞–º–µ—Ç—Ä—ã —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –º–æ–∂–Ω–æ —Ç–∞–∫–∂–µ –≤ Map.
// üìå –û—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞—Ç—å –Ω–æ—É—Ç–±—É–∫–∏ –∏—Ö –ø–µ—Ä–≤–æ–Ω–∞—á–∞–ª—å–Ω–æ–≥–æ –º–Ω–æ–∂–µ—Å—Ç–≤–∞ –∏ –≤—ã–≤–µ—Å—Ç–∏ –ø—Ä–æ—Ö–æ–¥—è—â–∏–µ –ø–æ
// —É—Å–ª–æ–≤–∏—è–º.

public class LaptopSearching {

    public static void main(String[] args) {
        userInterface();
    }

    static Laptop hpPavillion = new Laptop("HP", "Windows 11", 8, 1000, "black");
    static Laptop macbookPro = new Laptop("Apple", "MacOS", 16, 512, "silver");
    static Laptop dell = new Laptop("DELL", "Linux", 4, 256, "white");
    static Laptop lenovo = new Laptop("Lenovo", "Windows 11", 8, 256, "black");
    static Laptop honor = new Laptop("HONOR", "Linux", 16, 1000, "silver");
    static Laptop hpPavillion2 = new Laptop("HP", "Windows 11", 32, 2000, "white");

    static HashSet<Laptop> hashSet = new HashSet<>(Arrays.asList(hpPavillion, macbookPro, dell, lenovo, honor, hpPavillion2));

    public static void searchingProccess(String param) {
        int countSuccessfulSearch = 0;

        for (Laptop el : hashSet) {
            String takeOne = el.getAll().toString();

            if (takeOne.contains(param)) {
                System.out.println(el);
                System.out.println();
                countSuccessfulSearch += 1;
            }
        }

        if (countSuccessfulSearch == 0) System.out.println("–ü–æ –≤–∞—à–µ–º—É –∑–∞–ø—Ä–æ—Å—É –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.");
    }

    public static void searchingNumParameter(int param, int numOperation) {
        int countSuccessfulSearch = 0;

        for (Laptop el : hashSet) {
            switch (numOperation) {
                case 1:
                    if (el.getRam() >= param) {
                        System.out.println(el);
                        System.out.println();
                        countSuccessfulSearch += 1;
                    }
                    break;
                case 2:
                    if (el.getHdd() >= param) {
                        System.out.println(el);
                        System.out.println();
                        countSuccessfulSearch += 1;
                    }
                    break;          
                default:
                    break;
            }      
        }

        if (countSuccessfulSearch == 0) System.out.println("–ü–æ –≤–∞—à–µ–º—É –∑–∞–ø—Ä–æ—Å—É –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.");
    }

    public static void userInterface() {
        try (Scanner scanner = new Scanner(System.in)) {
            while (true) {
                System.out.println();
                System.out.println("–í—ã–±–µ—Ä–∏—Ç–µ –∫—Ä–∏—Ç–µ—Ä–∏–π –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –∏–ª–∏ –Ω–∞–ø–∏—à–∏—Ç–µ exit –¥–ª—è –≤—ã—Ö–æ–¥–∞.");
                System.out.println("1. –ë—Ä–µ–Ω–¥" + "\n" + "2. OC" + "\n" + "3. –û–ó–£" + "\n" + "4. HDD" + "\n" + "5. –¶–≤–µ—Ç" + "\n");
                String userEnter = scanner.nextLine();

                if (userEnter.equals("exit")) break;

                switch (userEnter) {
                    case "1":
                        System.out.println();
                        System.out.println("–í—ã–±–µ—Ä–∏—Ç–µ –∫—Ä–∏—Ç–µ—Ä–∏–π –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –∏–ª–∏ –Ω–∞–ø–∏—à–∏—Ç–µ exit –¥–ª—è –≤—ã—Ö–æ–¥–∞.");
                        System.out.println("1. HP" + "\n" + "2. Apple" + "\n" + "3. Dell" + "\n" + "4.Lenovo" + "\n"
                                + "5.HONOR" + "\n");

                        String userSwitchBrand = scanner.nextLine();

                        switch (userSwitchBrand) {
                            case "1":
                                searchingProccess("HP");
                                break;
                            case "2":
                                searchingProccess("Apple");
                                break;
                            case "3":
                                searchingProccess("DELL");
                                break;
                            case "4":
                                searchingProccess("Lenovo");
                                break;
                            case "5":
                                searchingProccess("HONOR");
                                break;
                            default:
                                break;
                    
                        } break;

                    case "2":
                        System.out.println();
                        System.out.println("–í—ã–±–µ—Ä–∏—Ç–µ –∫—Ä–∏—Ç–µ—Ä–∏–π –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –∏–ª–∏ –Ω–∞–ø–∏—à–∏—Ç–µ exit –¥–ª—è –≤—ã—Ö–æ–¥–∞.");
                        System.out.println("1. Windows" + "\n" + "2. MacOs" + "\n" + "3. Linux" + "\n");

                        String userSwitchOs = scanner.nextLine();

                        switch (userSwitchOs) {
                            case "1":
                                searchingProccess("Windows");
                                break;
                            case "2":
                                searchingProccess("MacOS");
                                break;
                            case "3":
                                searchingProccess("Linux");
                             default:
                                break;              
                        } break;

                    case "3":
                        System.out.println();
                        System.out.println("–í—ã–±–µ—Ä–∏—Ç–µ –∫—Ä–∏—Ç–µ—Ä–∏–π –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –∏–ª–∏ –Ω–∞–ø–∏—à–∏—Ç–µ exit –¥–ª—è –≤—ã—Ö–æ–¥–∞.");
                        System.out.println("1. 4" + "\n" + "2. 8" + "\n" + "3. 16" + "\n" + "4. 32" + "\n");

                        String userSwitchRam = scanner.nextLine();

                        switch (userSwitchRam) {
                            case "1":
                                searchingNumParameter(4,1);
                                break;
                            case "2":
                                searchingNumParameter(8,1);
                                break;
                            case "3":
                                searchingNumParameter(16,1);
                            case "4":
                                searchingNumParameter(32,1);
                            default:
                                break;               
                        } break;

                    case "4":
                        System.out.println();
                        System.out.println("–í—ã–±–µ—Ä–∏—Ç–µ –∫—Ä–∏—Ç–µ—Ä–∏–π –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –∏–ª–∏ –Ω–∞–ø–∏—à–∏—Ç–µ exit –¥–ª—è –≤—ã—Ö–æ–¥–∞.");
                        System.out.println("1. 128" + "\n" + "2. 256" + "\n" + "3. 512" + "\n" + "4. 1000" + "\n"+ "5. 2000" + "\n");

                        String userSwitchHdd = scanner.nextLine();

                        switch (userSwitchHdd) {
                            case "1":
                                searchingNumParameter(128,2);
                                break;
                            case "2":
                                searchingNumParameter(256,2);
                                break;
                            case "3":
                                searchingNumParameter(512,2);
                            case "4":
                                searchingNumParameter(1000,2);
                            case "5":
                                searchingNumParameter(2000,2);
                            default:
                                break;               
                        } break;
                    case "5":
                        System.out.println();
                        System.out.println("–í—ã–±–µ—Ä–∏—Ç–µ –∫—Ä–∏—Ç–µ—Ä–∏–π –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –∏–ª–∏ –Ω–∞–ø–∏—à–∏—Ç–µ exit –¥–ª—è –≤—ã—Ö–æ–¥–∞.");
                        System.out.println("1. –ß–µ—Ä–Ω—ã–π" + "\n" + "2. –ë–µ–ª—ã–π" + "\n" + "3. –°–µ—Ä–µ–±—Ä–∏—Å—Ç—ã–π" + "\n" + "4. –ö—Ä–∞—Å–Ω—ã–π" + "\n");

                        String userSwitchColor = scanner.nextLine();

                        switch (userSwitchColor) {
                            case "1":
                                searchingProccess("black");
                                break;
                            case "2":
                                searchingProccess("white");
                                break;
                            case "3":
                                searchingProccess("silver");
                                break;
                            case "4":
                                searchingProccess("–ö—Ä–∞—Å–Ω—ã–π");
                                break;
                            default:
                                break;               
                        } break;

                    default: break;
                }
            }
        }
    }
}
